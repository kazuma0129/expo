name: Android Client - EAS Build

on:
  workflow_dispatch:
    inputs:
      buildType:
        required: true
        type: 'choice'
        description: 'buildType'
        options:
          - versioned-client
          - unversioned-client
          - versioned-client-signed
          - versioned-client-signed-apk
          - versioned-client-add-sdk
  schedule:
    # 5:20 AM UTC time on every Monday, Wednesday and Friday
    # Build a versioned client
    - cron: '20 5 * * 1,3,5'
    # 5:20 AM UTC time on every Monday
    # Run versioning process for the next sdk and build a versioned client
    - cron: '20 5 * * 1'


concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: ðŸ‘€ Checkout
        uses: actions/checkout@v3
      - name: ðŸ”Ž Check which flavor to build
        id: flavor
        uses: dorny/paths-filter@v2
        with:
          # this action fails when base is not set on schedule event
          base: ${{ github.ref }}
          filters: |
            versioned:
              - android/versioned-abis/**
              - android/versioned-react-native/**
              - android/expoview/src/versioned/**
              - android/expoview/src/main/java/versioned/**
              - android/**/*.gradle
      - name: Resolve profile
        id: profile
        run: |
          DISPATCH_PROFILE="${{ github.event.inputs.buildType }}"
          IS_VERSIONED="${{ steps.flavor.outputs.versioned }}"
          if [[ ! -z "$DISPATCH_PROFILE" ]]; then
            echo "profile=$DISPATCH_PROFILE" >> $GITHUB_OUTPUT
            if [[ "$DISPATCH_PROFILE" == "versioned-client" ]]; then
              echo "project_id=97ab66f4-49e2-4ec7-85cc-922c56a68bae" >> $GITHUB_OUTPUT
              echo "slug=versioned-expo-go" >> $GITHUB_OUTPUT
            elif [[ "$DISPATCH_PROFILE" == "versioned-client-signed" ]]; then
              echo "project_id=97ab66f4-49e2-4ec7-85cc-922c56a68bae" >> $GITHUB_OUTPUT
              echo "slug=versioned-expo-go" >> $GITHUB_OUTPUT
            elif [[ "$DISPATCH_PROFILE" == "versioned-client-signed-apk" ]]; then
              echo "project_id=97ab66f4-49e2-4ec7-85cc-922c56a68bae" >> $GITHUB_OUTPUT
              echo "slug=versioned-expo-go" >> $GITHUB_OUTPUT
            elif [[ "$DISPATCH_PROFILE" == "unversioned-client" ]]; then
              echo "project_id=09066dbe-ef65-460e-9201-b7aa931abbf4" >> $GITHUB_OUTPUT
              echo "slug=unversioned-expo-go" >> $GITHUB_OUTPUT
            elif [[ "$DISPATCH_PROFILE" == "versioned-client-add-sdk" ]]; then
              echo "project_id=8550a402-d28f-4437-af87-2fb77b576c3f" >> $GITHUB_OUTPUT
              echo "slug=versioned-expo-go-add-sdk" >> $GITHUB_OUTPUT
            fi
          elif [[ "${{ github.event.schedule }}" == "20 5 * * 1,3,5" ]]; then
            echo "profile=versioned-client" >> $GITHUB_OUTPUT
            echo "project_id=97ab66f4-49e2-4ec7-85cc-922c56a68bae" >> $GITHUB_OUTPUT
            echo "slug=versioned-expo-go" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.schedule }}" == "20 5 * * 1" ]]; then
            echo "profile=versioned-client-add-sdk" >> $GITHUB_OUTPUT
            echo "project_id=8550a402-d28f-4437-af87-2fb77b576c3f" >> $GITHUB_OUTPUT
            echo "slug=versioned-expo-go-add-sdk" >> $GITHUB_OUTPUT
          elif [[ "$IS_VERSIONED" == "true" ]]; then
            echo "profile=versioned-client" >> $GITHUB_OUTPUT
            echo "project_id=97ab66f4-49e2-4ec7-85cc-922c56a68bae" >> $GITHUB_OUTPUT
            echo "slug=versioned-expo-go" >> $GITHUB_OUTPUT
          else
            echo "profile=unversioned-client" >> $GITHUB_OUTPUT
            echo "project_id=09066dbe-ef65-460e-9201-b7aa931abbf4" >> $GITHUB_OUTPUT
            echo "slug=unversioned-expo-go" >> $GITHUB_OUTPUT
          fi
      - name: Trigger build
        id: request
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.expo.dev/graphql'
          method: 'POST'
          customHeaders: "{\"Authorization\": \"Bearer ${{ secrets.EAS_BUILD_BOT_TOKEN }}\", \"Content-Type\": \"application/json\" }"
          ignoreStatusCodes: 400
          escapeData: 'true'
          data: >-
            { "operationName":"AndroidBuidMutation", "query": "
              mutation AndroidBuidMutation {
                build {
                  createAndroidBuild(
                    appId: \"${{ steps.profile.outputs.project_id }}\"
                    job: {
                      type: UNKNOWN
                      triggeredBy: GIT_BASED_INTEGRATION
                      projectArchive: {
                        type: GIT
                        repositoryUrl: \"https://github.com/expo/expo.git\"
                        gitRef: \"${{ github.sha }}\"
                      }
                      projectRootDirectory: \"apps/eas-expo-go\"
                      secrets: { robotAccessToken: \"${{ secrets.EAS_BUILD_BOT_TOKEN }}\" },
                      buildProfile: \"${{ steps.profile.outputs.profile }}\"
                    }
                    metadata: {
                      trackingContext: {},
                      message: \"[${{ github.triggering_actor }} - ${{ github.event_name}} ${{ github.ref }}]\" }
                      buildParams: {
                        resourceClass: ANDROID_LARGE
                      }
                  ) {
                    build { id }
                  }
                }
              } "}
      - name: Show Response
        run: |
          echo ${{ steps.request.outputs.response }}
          echo "https://expo.dev/accounts/expo-ci/projects/${{ steps.profile.outputs.slug }}/builds/${{ fromJSON(steps.request.outputs.response).data.build.createAndroidBuild.build.id }}"
